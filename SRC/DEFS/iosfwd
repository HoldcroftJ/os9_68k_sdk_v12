#ifndef __STD_IOSFWD__
#define __STD_IOSFWD__

/***************************************************************************
 *
 * iosfwd - forward declarations for the iostreams
 *
 * $Id: iosfwd,v 1.30 1996/09/24 19:01:15 smithey Exp $
 *
 ***************************************************************************
 *
 * (c) Copyright 1994-1996 Rogue Wave Software, Inc.
 * ALL RIGHTS RESERVED
 *
 * The software and information contained herein are proprietary to, and
 * comprise valuable trade secrets of, Rogue Wave Software, Inc., which
 * intends to preserve as trade secrets such software and information.
 * This software is furnished pursuant to a written license agreement and
 * may be used, copied, transmitted, and stored only in accordance with
 * the terms of such license and with the inclusion of the above copyright
 * notice.  This software and information or any other copies thereof may
 * not be provided or otherwise made available to any other person.
 *
 * Notwithstanding any other lease or license that may pertain to, or
 * accompany the delivery of, this computer software and information, the
 * rights of the Government regarding its use, reproduction and disclosure
 * are as set forth in Section 52.227-19 of the FARS Computer
 * Software-Restricted Rights clause.
 * 
 * Use, duplication, or disclosure by the Government is subject to
 * restrictions as set forth in subparagraph (c)(1)(ii) of the Rights in
 * Technical Data and Computer Software clause at DFARS 252.227-7013.
 * Contractor/Manufacturer is Rogue Wave Software, Inc.,
 * P.O. Box 2328, Corvallis, Oregon 97339.
 *
 * This computer software and information is distributed with "restricted
 * rights."  Use, duplication or disclosure is subject to restrictions as
 * set forth in NASA FAR SUP 18-52.227-79 (April 1985) "Commercial
 * Computer Software-Restricted Rights (April 1985)."  If the Clause at
 * 18-52.227-74 "Rights in Data General" is specified in the contract,
 * then the "Alternate III" clause applies.
 *
 **************************************************************************/

#include <stdcomp.h>
#include <rw/stdmutex.h>

#ifndef _RWSTD_NO_NAMESPACE
namespace std {
#endif

template<class charT> struct _RWSTDExportTemplate char_traits;

template <class T> class _RWSTDExportTemplate allocator;

template <class stateT> class _RWSTDExportTemplate fpos;
class _RWSTDExportTemplate mbstate_t;

typedef fpos<mbstate_t> streampos;
typedef fpos<mbstate_t> wstreampos;

typedef long streamoff;
typedef long wstreamoff;


#ifndef _RWSTD_NO_COMPLEX_DEFAULT_TEMPLATES
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_ios;
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_streambuf;
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_istream;
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_ostream;
template<class charT, class traits = char_traits<charT>, class Allocator = allocator<void> > 
class _RWSTDExportTemplate basic_stringbuf;
template<class charT, class traits = char_traits<charT>, class Allocator = allocator<void>  > 
class _RWSTDExportTemplate basic_istringstream;
template<class charT, class traits = char_traits<charT>, class Allocator = allocator<void>  > 
class _RWSTDExportTemplate basic_ostringstream;
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_filebuf;
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_ifstream;
template<class charT, class traits = char_traits<charT> > class _RWSTDExportTemplate basic_ofstream;
template<class T, class charT, class traits=char_traits<charT> > 
  class _RWSTDExportTemplate ostream_iterator;
template<class T, class charT, class traits=char_traits<charT>,
         class Distance = ptrdiff_t > 
  class _RWSTDExportTemplate istream_iterator;
template<class charT, class traits=char_traits<charT> > 
  class _RWSTDExportTemplate ostreambuf_iterator;
template<class charT, class traits=char_traits<charT> > 
  class _RWSTDExportTemplate istreambuf_iterator;
template<class charT, class traits= char_traits<charT> > class
_RWSTDExportTemplate basic_iostream;
template<class charT, class traits= char_traits<charT> > class
_RWSTDExportTemplate basic_fstream;
template<class charT, class traits= char_traits<charT>, class Allocator = allocator<void>  > 
class _RWSTDExportTemplate basic_stringstream;
#else
template<class charT, class traits > class _RWSTDExportTemplate basic_ios;
template<class charT, class traits > class _RWSTDExportTemplate basic_streambuf;
template<class charT, class traits > class _RWSTDExportTemplate basic_istream;
template<class charT, class traits > class _RWSTDExportTemplate basic_ostream;
template<class charT, class traits, class Allocator > class _RWSTDExportTemplate basic_stringbuf;
template<class charT, class traits, class Allocator > class _RWSTDExportTemplate basic_istringstream;
template<class charT, class traits, class Allocator > class _RWSTDExportTemplate basic_ostringstream;
template<class charT, class traits > class _RWSTDExportTemplate basic_filebuf;
template<class charT, class traits > class _RWSTDExportTemplate basic_ifstream;
template<class charT, class traits > class _RWSTDExportTemplate basic_ofstream;
template<class T, class charT, class traits > class _RWSTDExportTemplate ostream_iterator;
template<class T, class charT, class traits, class Distance > class _RWSTDExportTemplate istream_iterator;
template<class charT, class traits > class _RWSTDExportTemplate ostreambuf_iterator;
template<class charT, class traits > class _RWSTDExportTemplate istreambuf_iterator;
template<class charT, class traits > class _RWSTDExportTemplate basic_iostream;
template<class charT, class traits > class _RWSTDExportTemplate basic_fstream;
template<class charT, class traits, class Allocator > class _RWSTDExportTemplate basic_stringstream;
#endif

#ifndef _RWSTD_NO_COMPLEX_DEFAULT_TEMPLATES
typedef basic_ios<char>                                    ios;
typedef basic_streambuf<char>                              streambuf;
typedef basic_istream<char>                                istream;
typedef basic_ostream<char>                                ostream;
typedef basic_stringbuf<char>                              stringbuf;
typedef basic_istringstream<char>                          istringstream;
typedef basic_ostringstream<char>                          ostringstream;
typedef basic_filebuf<char>                                filebuf;
typedef basic_ifstream<char>                               ifstream;
typedef basic_ofstream<char>                               ofstream;
typedef basic_fstream<char>                                fstream;
typedef basic_iostream<char>                               iostream;
typedef basic_stringstream<char>                           stringstream;
#ifndef _RWSTD_NO_WIDE_CHAR
typedef basic_ios<wchar_t>                                 wios;
typedef basic_streambuf<wchar_t>                           wstreambuf;
typedef basic_istream<wchar_t>                             wistream;
typedef basic_ostream<wchar_t>                             wostream;
typedef basic_stringbuf<wchar_t>                           wstringbuf;
typedef basic_istringstream<wchar_t>                       wistringstream;
typedef basic_ostringstream<wchar_t>                       wostringstream;
typedef basic_filebuf<wchar_t>                             wfilebuf;
typedef basic_ifstream<wchar_t>                            wifstream;
typedef basic_ofstream<wchar_t>                            wofstream;
typedef basic_fstream<wchar_t>                             wfstream;
typedef basic_iostream<wchar_t>                            wiostream;
typedef basic_stringstream<wchar_t>                        wstringstream;
#endif
#else
typedef basic_ios<char, char_traits<char> >                 ios;
typedef basic_streambuf<char, char_traits<char> >           streambuf;
typedef basic_istream<char, char_traits<char> >             istream;
typedef basic_ostream<char, char_traits<char> >             ostream;
typedef basic_stringbuf<char, char_traits<char>, allocator<void> >           stringbuf;
typedef basic_istringstream<char, char_traits<char>, allocator<void> >       istringstream;
typedef basic_ostringstream<char, char_traits<char>, allocator<void> >       ostringstream;
typedef basic_filebuf<char, char_traits<char> >             filebuf;
typedef basic_ifstream<char, char_traits<char> >            ifstream;
typedef basic_ofstream<char, char_traits<char> >            ofstream;
typedef basic_fstream<char, char_traits<char> >             fstream;
typedef basic_iostream<char, char_traits<char> >            iostream;
typedef basic_stringstream<char, char_traits<char>, allocator<void> >        stringstream;
#ifndef _RWSTD_NO_WIDE_CHAR
typedef basic_ios<wchar_t, char_traits<wchar_t> >           wios;
typedef basic_streambuf<wchar_t, char_traits<wchar_t> >     wstreambuf;
typedef basic_istream<wchar_t, char_traits<wchar_t> >       wistream;
typedef basic_ostream<wchar_t, char_traits<wchar_t> >       wostream;
typedef basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<void> >     wstringbuf;
typedef basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<void> > wistringstream;
typedef basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<void> > wostringstream;
typedef basic_filebuf<wchar_t, char_traits<wchar_t> >       wfilebuf;
typedef basic_ifstream<wchar_t, char_traits<wchar_t> >      wifstream;
typedef basic_ofstream<wchar_t, char_traits<wchar_t> >      wofstream;
typedef basic_fstream<wchar_t,char_traits<wchar_t> >        wfstream;
typedef basic_iostream<wchar_t, char_traits<wchar_t> >      wiostream;
typedef basic_stringstream<wchar_t,char_traits<wchar_t>, allocator<void> >   wstringstream;
#endif
#endif

#ifndef _RWSTD_NO_NAMESPACE
}
#endif


#endif
