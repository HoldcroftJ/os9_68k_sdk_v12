; Microware Systems Corporation
; Tip of the Day
; -- Categories --
edt=Editing Text
; -- Tips --			  
edt,You can open one of the last files you worked on by choosing it from the bottom of the File menu.
edt,You can set the way files are sorted in your Open tab of the Project toolbar.   Use the File Open Tab Configuration dialog.  You can also use the buttons at the top of the file list to sort files by each of the columns such as 'Name', 'Ext' and 'Size'.  A second click reverses the sort.
edt,You can force Toolbars to undock.  The auto-docking feature of Hawk can make it difficult to undock large toolbars.  Just hold down the Ctrl key while clicking the Left-Mouse on a gray area of the toolbar (not the title bar) and dragging off the position where it is docked.  When you let go, it will be undocked!
edt,You can have Hawk remember the last directory you were in when you enter the File|Open dialog.  This is done via a setting in Tools|Customize|Environment|General called 'Retain Directory Changes'.  Without this option selected, Hawk will always bring up the File|Open dialog in the directory from which you launched Hawk.
edt,The Search and Replace dialogs say "Search in Selection" and "Replace in Selection" if the search is limited to the selected text.  You'll find this setting in the Default Options found on each dialog.
edt,When you execute a Compile, Build, etc., Hawk shells out to DOS in the directory you have defined under Project| Properties| Directories| Working Directory.  If you have a set a current project within a designated project space, you may wish to use %x, a component macro designating your project directory.  With or without a project open, you can use '.' (without the quotes) to shell to the current directory.
edt,Multiple projects can be displayed at a time, within a project space.
edt,Create a project space using the New option on the Project Space submenu of the Project pull down menu.
edt,Project settings are controlled in the Project Properties dialog, accessed by clicking 'Properties' on the Project menu.
edt,You can select an entire document with a single command.  Choose the Select All option on the Edit menu.  This is also conveniently bound to Ctrl-A in the CUA keymap.
edt,Pop-up menus are available in each of the Tabbed Output Windows.  Just right-click in the Build, FileFind, Search, AppBasic or other windows to see what options are available.
edt,Popup menus can be edited with the popup menu editor. The editor can be accessed using the "Edit This Menu" item on most popup menus or by running the API "DlgEditPopupMenu" from the Tools|API Command dialog.
edt,Multiple Clipboards can be used for copying and pasting. Use the Tools|Customize|Environment|Clipboard dialog to control the number of clipboards available.
edt,Hawk offers a ClipView feature that enables you to view the contents of your clipboards and Scrap Buffers through a tab on your Output Window. This feature is enabled by checking 'Clipboard/Scrap Viewer' in the Tools| Customize| Libraries dialog.
edt,Would you like additional colors in Hawk or the ability to easily change colors?  Change colors in Tools|Customize|View Setups|Colors.
edt,When creating a new untitled document, you may wish to change the size of the window created.  Normally this is based on the size of the client area.  To override this you could use this command:\n\nWinSetCreationPos=0x8000, 0x8000, 400, 300\n\n(0x8000 is CW_USEDEFAULT, 400 is the width in pixels, 300 is the height).
edt,In Hawk you can use Snippets to build a template to enter the name of a function once, and insert it several times.  An example can be found in the built-in Snippet CFUNCT.TPL. Snippets are displayed on the CodeFolio tab of the Project Window.
edt,Any menu dialog we have can usually be bound to a keystroke or button using MenuCommand() and the menu id.  Two ways to get menu IDs are by 1) looking in exports.h for the appropriate IDM_??? string, and 2) going into Tools| Customize| Environment| Menu, finding the menu item you want, then hitting the [Change Item Attributes] button.  The ID (in hexadecimal) will show up in the upper right.
edt,You can resize most Hawk dialogs.  This is handy when you want to view a list of files or other items more conveniently.
edt,Many editing features, such as double-clicking to highlight a word, WordNext, WordPrevious, DeleteNextWord, etc., follow your word delimiter definitions.  These are setup under Tools| Customize| Language| Options and are language specific.  By default, we ship Hawk with these set to ^A-Za-z0-9_  meaning anything that is not a letter, number or underscore is a delimiter (the ^ indicates NOT).
edt,Do you have the need to Mark a selection of Text and save to another file?  In the CUA keymap this can be done through the following steps:  Place cursor on beginning of section;  Hit Ctrl-L (line selection);  Hit F9 for command prompt;  Type in GoToLine <enter>;  In dialog box, type in the line number <enter> This selects that section.;  Hit Ctrl-W for write dialog box.  Give it a filename.  Presto!
edt,You can change the shape of your cursor with the SysCaretHeight, SysCaretWidth and SysCaretWide commands.  Hawk uses four different cursors, depending where the cursor is located and what mode Hawk is in, Insert or Overtype.
edt,The Selective Display feature for Function Definitions is actually bound to the Hawk function Routines.  The Routines function is a regular expression found in the language support source file for your language, for example C.C. You can modify the regular expression for the Routines function to match your requirements or you can make your own Routines regular expression in the Tools|Customize|Language|CodeSense|Symbol Patterns dialog. Just mark the 'Use for Selective Display Routine' option for the selected regular expression. 
edt,
edt,Hawk's Tag's feature supports C, C++ and Assembly files.  The extensions that are used to filter the list of files to include when building tags are:\n\n"*.c;*.h;*.cpp;*.hpp;*.cxx;*.asm;*.inc"\n\nIf you wish to change this list, you can use: TagSetFilterStr(LPSTR str).  This function replaces the list shown above with the given list.
edt,Do you edit source files frequently that are similar in syntax to some common file type?  If so, you can easily take advantage of the features Hawk offers for supported languages by mapping your extension to the supported one.  This is done in the Tools|Customize|Language dialog.
edt,Hawk's ChromaCoding, smart indenting, template expansion and addition of keywords are key features.  Several languages are supported by default in Hawk.  Many more are supported through the use of add-on dll's.  These are available through our on-line sites and on our CD.  Language support can also be added with ChromaCoding Lexers. See the User's Guide chapter on 'View Setups and Language Support' for more information on Hawk language support..
edt,If you are working with an unsupported language, and there is none similar, you have the ability to write your own support and add the functionality to Hawk!  We provide a sample, called GENICL50.ZIP for writing a DLL, or you can use a ChromaCoding Lexer which can be found or created in Tools |Customize |ChromaCoding Lexers.  You can also create new support from any currently supported language's source files.  For more information on extending Hawk in this way, see the User's Guide chapter on 'View Setups and Language Support'.
edt,Hawk ChromaCoding Lexers add language support to Hawk without having to write a DLL. A lexer allows you to define all the lexical elements of a language needed for coloring and can be bound to specific file types. These are setup under Tools| Customize| ChromaCoding Lexers.
edt,Hawk offers a DDE implementation, which is described in cwdde.c, and in the online help.  The cwdde.dll needs to be loaded by marking 'Hawk as DDE Server' in the Tools|Customize|Libraries dialog.  In addition, we have two files called ddetest.zip and sddetest.zip (source) which contain a DDE test application that sends commands to Hawk.  The files ddetest.zip (16 bit) and ntdde.zip (32 bit) are on our sites.
edt,Hawk's tab settings are defined under Tool| Customize| Language| Options and are language specific.  By default, most languages are set to 5,9 (every 4 spaces),  although some may be set to 9,17 (every 8 spaces).  Any changes to your tab settings are made through this dialog.  The Document| Manager also reports tab information, but this is for the current document only.
edt,Do you wish to have your files use tabs instead of spaces, or spaces instead of tabs?  This is setup under the Tools| Customize| Language| Edit dialog.  If using spaces, make sure the 'Use Tabs' box isn't checked on Tools| Customize| Language| Options as well.  These settings are language specific.  This setup effects future editing only.
edt,If you have a document which contains spaces and you wish to convert those to tabs, or vice versa, this can be done conveniently through two Hawk functions, ENTAB and DETAB.  These can be executed from the Tools|API Command dialog, or are conveniently bound to toolbar buttons on the Edit toolbar for you.
edt,You can drag and drop text between visible windows.  The method is the same as dragging and dropping text within a document, except that you press the Shift key while the mouse position makes the transition from one window to another.
edt,If you find that you prefer one keymap, but there are functions that exist in another that you would like to use, this can be done by binding those functions to a keystroke.  The other keymap dll must first be loaded through Tools| Customize| Libraries.  You can also call the dll when the keystroke is pressed, for example\n\nCUA:CUA_search_forward\n\nThe first CUA: calls the dll, which then exports the function that follows.
edt,When you select the Change Item Attributes button in the Tools| Customize| Environment| Menu dialog, you'll notice that the Handler Functions all begin with a lowercase letter.  These functions are not directly accessible.  To add your own function, or a Hawk API in the dialog (beginning with an uppercase letter) you need to check the Non-Standard Menu Handler box in this dialog.
edt,On some menus, certain functions have corresponding keystrokes, such as File|Save is also done via Ctrl-S in CUA.  Go to Tools| Customize| Keyboard to change the keystroke associated with any of these menu items.  To change the text that appears in the menu to the new keystroke combination, use Tools| Customize| Environment| Menu| Change Item Attributes and change the Key String to the new value.
edt,You can add your own keywords to the list that Hawk maintains for your file extension.  This is done in the Tools |Customize| Language| Edit dialog for your extension. Keywords can be added for DLL language extensions using the Keywords button under the DLL radio button, or they can be added for ChromaCoding Lexers, using the ChromaCoding Lexer Settings dialog. When adding keywords for a DLL, you can use the Default keyword list (that Hawk maintains), or add a User 1 or User 2 list of your own.  The User 1 and User 2 lists follow the Tools|Customize|View Setups Alternate 5 and Alternate 6 color settings for alternate coloring.
edt,Hawk offers an interface with version control software packages which supports command line and SCC providers.  You must first have the version control software installed on your system.  See the CW_FAQ.HLP file for information on what Hawk needs to know in order to set this up.  It also gives examples of 16 and 32-bit setups for several popular version control packages.
edt,You can delete files from a project by deleting them from the Project Window (File View).
edt,To checkin and checkout files from your version control software within Hawk, the files you have open in Hawk must be part of the version control project.  In the case of the SCC provider interface, this must also be the Open project defined in Tools| Version Control| Setup.  There is no relationship between Hawk projects and your version control software's projects.
edt,Version control projects can be automatically opened and closed from within Hawk when using the SCC interface.  The version control settings need to be stored with a Hawk project which, when opened and closed, will conjunctively open and close the version control project.  To store version control settings in a Hawk project, make the project current, and then open the version control project from Hawk's Tools|Version|Control Setup dialog.
edt,When using the SCC version control integration, Hawk can read the files that make up a version control project into a Hawk project.  This eliminates the added effort of manually adding each individual file in the version control project to the Hawk project.  The button used for reading the components of a version control project into a Hawk project is found in Project|Properties|Members.  The Setup button is used for specifying the version control project.  The [Read] button reads the files from the version control project.
edt,You can add or remove a file that is open and current in Hawk to or from the current version control project.  Just click "Add" or "Remove" from the Version Control submenu of the Tools pull-down menu or use the buttons labeled "Add" and "Remove" in the Version Control Maintenance dialog.  
edt,You can use parts of the text that matches a Search in the Replacement text, using replacement groups.  See the help for Replace Options for more information.
edt,Hawk 32-bit offers synchronization with MSVC++ environments.  Search for the topic 'Synchronization Technology' in Hawk's online help for more information.  VCSync places a Hawk button or menu item in MSVC which, when selected, loads all open files into Hawk.  All changes are saved and maintained when switching between the two applications.
edt,If you are not familiar with creating your own makefiles to use with Hawk, you can still call the makefile generated by the MSVC IDE through its dialogs.  This is done with VCSync set up and binding a keystroke to: cwsyncvc_menustr 'Build|Build'.  VCSync sends a command to MSVC that executes the MSVC menu item Build| Build and builds your project.
edt,If you are thinking of extending Hawk by writing your own dll and you will be using MSVC to compile the dll, do not select any optimizations when doing the compile.  These conflict with the way that Hawk does things and cause problems.
edt,Hawk offers a Browse feature which browses your .bsc files, or Hawk's own tag files (.ptg).  Hawk does not generate browser (.bsc) files itself, but can view them if you have generated them with another source.  The right pane of the Browser window, and many of the functions, such as Called By, are only valid for .bsc files.  The tag files do not contain this information.
edt,Do you have files which contain a Unix or Macintosh End of Line (EOL) character and you need to convert those to DOS EOL's (or vice versa)?  Set your EOL characters in Tools| Customize| Language| Options.  (They are DOS by default when Unix is not selected).  Then in Search|Replace, search for \\n and replace with \\n and make sure Regular Expressions is checked.  This replaces the current with the new.
edt,You can search and replace any character, even non-printable characters, by its hex value.  In the Search|Replace dialog., just precede the hex value with \\x and make sure you have Regular Expressions checked.
edt,Have you ever found the need to force page breaks when printing your document?  This can be done by inserting the literal hex value for the page break in your document.  Go to Edit|Insert Literal, choose the Hex setting and enter the value 'C' (without the quotes).
edt,Hawk offers several ways in which you can view your files.  In addition to the standard view, with ChromaCoding support, we also offer a hex view,  a view of visibles (spaces, tabs, etc.), and several selective display options.  In the CUA keymap, to view your file in hex, type Ctl-Shift-H.  To view your literals, type Ctl-Shift-X.  See Text|Selective Display for those options.
edt,One of Hawk's powerful features is the ability to view and edit your files in hex mode.  To enter hex mode, in the CUA keymap type Ctl-Shift-H, or use the toolbar button on the Edit toolbar.  To exit hex view, hit <Esc>.  While in hex mode you can edit your files and we will insert accordingly.  You can cut and paste while in hex mode as well, and we offer the ability to print your hex view also.
edt,Premia offers many add-ons for Hawk which can be found on the CD, or any of our online sites.  If you are a Brief user, you might wish to use BTERP.DLL.  This is a Brief macro interpreter that allows you to maintain and use the old Brief macros you created in your new Windows Hawk environment.
edt,Premia offers many add-ons for Hawk which can be found on the CD, or at any of our online sites.  If you are looking for a C or C++ code beautifier, we have INDENT.ZIP, an external program which works with C files.  Also, Hawk comes with a built in formatter or beautifier for C, C++, and Java files.  Hawk's Format Source option is found under the Text pull-down menu.
edt,If you find that you need to trim trailing whitespace in your file, Hawk has a function available, TrimWhitespace which will trim the whitespace from the cursor position to the end of the line.  If you need to do an entire file at a time, you might wish to use the add-on utility STPTRAIL.ZIP or the API Macro StripWhite.  Premia offers many add-ons for Hawk which can be found on the CD, or any of our online sites.
edt,Hawk offers additional extensibility options through macro languages.  There are 3 macro languages in Hawk.  API macros use C-like language constructs, AppBasic uses Visual Basic-like language constructs, and Perl macros use the Perl language.  
edt,Macros made with any of the three macro languages that come with Hawk (Perl, AppBasic, or API Macros), are small 'programs' that perform user-designed tasks.  The 'programs' don't have to be compiled to be used, but can be run immediately from within Hawk.
edt,If you would like to see some sample macros made with one of the three macro languages that come with Hawk, AppBasic and Perl macros are stored in the 'Macros' subdirectory of the Hawk home directory, and API macros can be viewed in the API Macros editor under the Tools pull-down menu.
edt,Hawk's API macros editor is ready to be used out-of-the-box, under the Tools pull-down menu.  The AppBasic and Perl Macros editors have to be 'turned on' by putting check marks next to 'AppBasic macro language' and 'Perl Extension language' in the Tools|Customize|Libraries dialog.  The AppBasic and Perl macro languages each have their own tabs on Hawk's output window.
edt,Hawk comes with an 'Explorer View' HTML viewer that allows you to see HTML files as they appear in a browser.  The window is enabled by putting a checkmark next to 'HTML Explorer View' in Tools|Customize|Libraries.  Once the Explorer View has been enabled, any HTML file loaded in Hawk will automatically bring up a window displaying the file as it would appear in a browser.
edt,Hawk has a full-screen mode which can be turned on under the Window pull-down menu.  If you don't want to see anything but the documents you are working on, full-screen mode is a handy option.
edt,Hawk offers auto-hide toolbars. You can turn on this feature in the Tools| Customize| Toolbars| General dialog.
edt,The differencing window in Hawk has a 'recompute difference' button which lets you immediately recompute differences in the changes you have made to the two documents being compared.
edt,Hawk has header controls in the File Open tab of the Project Window which allow you to sort files by name, size, extension, or attribute.  Just click the control at the top of the window and the files that are visible in the window will be automatically sorted either alphabetically, using the filename or its extension, or numerically, using the size of the file or the date that the file was last modified.
edt,If you are a Windows user and cannot get FTEE to capture the output of your compile, make sure you have 32-bit access turned OFF on your system.  Otherwise Windows will bypass STDIO calls in DOS which is where FTEE tries to capture the output.  The User's Guide chapter on 'Setting up a Compiler'covers this topic in more detail.
edt,When setting up your compile command line in Project| Properties| Tools, under the compile category, it's important to remember that Hawk will shell out to execute this command in the directory you have specified in Project| Properties| Directories in the Working Directory.  By default, this is set to %x, a command component macro that expands to the project path.
edt,When Hawk shells out to DOS to execute your compile command line, it shells to the directory you have specified in Project| Properties| Directories in the Working Directory.  To force this to be the current directory, use '.' (without quotes) in the Working Directory.
edt,You can give names to keystroke recordings and execute them like functions. Go to the Edit|Keystroke Macros dialog to do this.
edt,In Hawk the Tools| Customize menu encompasses all the higher-level customization features of Hawk.
edt,Having difficulty setting up synchronization or projects? The Configuration Wizards located in Help| Configuration Wizards are available to assist you in setting up your projects, FTP configuration, synchronization and more.
edt,If you find that you are running out of environment space during your compiles within Hawk, here are some things you can try.  On your compile command line, at the very beginning of the line, type COMMAND.COM/E:4096/C.  You could also edit your config.sys file and add the line SHELL=command.com /p /e:4096, or edit the PIF file.
edt,If you need to setup custom environments for your compile command lines, you might consider using a batch file.  The batch file would contain all the necessary environment settings and even call your compiler or make utility.  Just place the batch file name on the compile command line in Project|Properties|Tools under the compile category of tools.
edt,When Hawk shells to DOS it uses the shell you have defined to do this.  By default, in 16-bit Hawk this is COMFGNML.PIF (foreground) and COMBGNML.PIF (background), two pif files that ship with Hawk.  Under 32-bit, Windows 9x will use COMMAND.COM and under Windows NT will use CMD.EXE.  You can change the shell Hawk uses with the functions SetFGShell and SetBGShell.
edt,VDOS is a command shell that runs in a DOS window and intercepts output from your compile.  If you are using 16-bit Hawk under Windows, add this line to the [386Enh] section of your SYSTEM.INI file: device=c:\\cwright\\cwvdos.386.  Also, you cannot use SHARE and VDOS together, as you will receive a sharing violation.  You might try VSHARE.386 as an alternative.
edt,An Error Parser is a routine that can take error messages from a compiler, assembler or linker and extracts the name of the file, the line number and the message from it.  When Hawk displays the output of your compile, you can then double click on the error and Hawk will bring up that source file and position your cursor at the line the error occurs.  Use the Project|Properties|Errors tab to set up.
edt,Hawk ships with several error parsers built-in for you.  These are listed in the drop down boxes in the dialog Project|Properties| Errors.  If you find that none of the listed parsers will do the job, there may be a parser in ERRPARSE.DLL that is designed for your compiler or utility.  Use Tools| Customize| Libraries to load ERRPARSE.DLL.  If an appropriate error parser still does not exist, you can create your own using the Custom Error Parser dialog found in the same tab.
edt,With a little knowledge of regular expressions, you can create an error parser for your compiler, linker or assembler in pretty short order using the Project|Properties| Errors| Custom Error Parser dialog.  The online help in this dialog provides an overview of how the parser is created, and supplies cross reference links to help on regular expressions if needed.
edt,Hawk has an enhanced Project Window.  This is a dockable toolbar that includes multiple tabs:  File View shows all project files in tree form, Outline shows all macro and function definitions in current documents, Bookmarks shows all bookmarks (global and local) in current documents, Open provides a view of directories and files, and CodeFolio displays available code Snippets.
edt,Hawk has enhanced Side- By -Side Differencing.  Enhancements include ChromaCoding as well as highlighted differences, compressed mode showing differences only, a splitter bar between window panes, and editing features such as copy, move, delete and restore lines between windows.
edt,About the Symbols tab in the Output window.  This tab provides quick viewing of any symbol definition.  Position your cursor on any function in your source file.  This function name is picked up and displayed in the Symbols tab, which in turn searches through the files defined in your File List for other occurrences.  Clicking on any find in the Symbols tab brings up that source file at the function.
edt,About the enhanced Text|Selective Display which permits multi-level text folding.  You can hide selected lines or paragraphs or selectively collapse/expand your files based on braces, indentation levels or routine definitions.  Preprocessor directives can now be directly entered into this dialog as well.
edt,You can specify DLLs for Hawk to automatically load via the Tools| Customize| Libraries menu.  This dialog lists the DLL's that ship with Hawk, and provides the ability for you to add your own to the list as well.
edt,Hawk can help you locate the cursor and other things faster with its Visibility Options.  These include current line highlighting (color or outline), visible bookmarks, filename and matching strings in output window and actual character differences in side-by-side differencing. These features can be turned on in the Tools|Customize|View Setups|General dialog.
edt,Need to move your Hawk projects, or share them with others, who may have a different directory structure than you?  Hawk attempts to detect such moves and updates the project paths for you.  When this occurs you will be presented with a dialog and options as to how you wish to have Hawk handle the updates.
edt,The Project| Properties| Filters list in Hawk supports partial paths in addition to the normal pattern matching.  For example you could enter \\INC*.* in the Pattern field and Hawk would pickup the contents of all your INCLUDE subdirectories.  This Filter list is only intended for display in the Project Toolbar.
edt,The Filters listed in the Project| Properties| Filters list in Hawk is a hierarchy view.  All files are matched sequentially according to  the order of your filters.  Therefore you might wish to have All Other Files (*.*) at the end of your Filter list.  This way it would pickup any remaining files, instead of containing all your files.  Any filters defined in this dialog are only displayed in the Project Toolbar.
edt,You can add scroll bars to your windows in the Tools| Customize| View Setups| General dialog.  Check the boxes for the horizontal and vertical scroll bars (and any other attributes you want).  In the bottom right of the dialog are three check boxes to choose the windows that will be affected by your choice.  Checking the Change Defaults and the All User Windows boxes, then OK, applies the change to your windows.
edt,Would you like to combine Templates and Button Links?  Select Edit|Insert Link and create a button, then print out your source file so that you can see that the 3-D button image is actually a series of comments.  Just enter that information into your template.  Go to Tools| Customize| Language| Templates and create a new Template.  An example for a To Do link:\n\nblah /*#$-TODO:Check for blah-$#*/\n\nYou can also use ExtExpandTemplate and bind the template to a button.
edt,Would you like to create a Macro Button Link in your source file that checks another file out of version control and reads it into Hawk to edit?  This might be a handy way to maintain revisions or documentation associated with the source file.  Go to Edit| Insert Link and create a Macro Button link that is a template.  An example is (all on one line):\n\nExtExpandTemplate("%xExecCommand Get filename$ %xBufEditFile filename$")
edt,Hawk has makefile, Visual Studio Workspace, and version control project 'readers' that read filenames from the makefile, Workspace, or version control project in order to incorporate them in Hawk projects or project spaces. The readers can be run in the Project|Properties|Members dialog.
edt,In the Project|Properties|Members tab, three Setup buttons let you setup and specify external makefiles, Visual Studio Workspaces, or version control projects to read file or project names out of. The files are read into Hawk projects or project spaces. Only two buttons are visible at a time. When a project space is selected, the top Setup button is for reading external Visual Studio Workspaces. When a Hawk project is selected, the top Setup button is for reading external makefiles. The bottom Setup button is always for reading version control projects.
edt,Currently, Hawk's makefile 'reader' has regex parsers for Microsoft Visual C++, Borland, and Hawk makefiles. The Workspace reader supports Visual Studio 5.0 and 6.0 .DSW files. More reader-support can be added if you can make a regular expression that will parse the appropriate filenames from the file for adding to the Hawk project or project space. 
edt,There are two "Read" buttons in the File tab of Hawk's Project Properties dialog. Pressing either of the buttons displays a dialog listing all files that the button is designed to read. You then have the option of adding them to your current Hawk project or project space. Out-of-the-box, the "Read" buttons will read files from Microsoft Visual C++, Borland, and Hawk makefiles, Visual Studio 5.0 and 6.0 Workspaces, and various types of version control projects.
edt,WordCompletion(), conveniently bound to Ctrl-Space in CUA, will complete the current word.  It first searches backward and if not found then forward for a matching complete word.  This is a neat feature for quickly entering those long function names!
edt,Hawk's Tools| Customize| Language| CodeSense dialog has options for controlling the behavior of the name completion feature.  You can choose whether you want name completion (Ctrl-Space) to search the Complete document for the name to complete, or the symbols database.  If there is more than 1 word that matches the letters typed in, you can have Hawk cycle through the names, or display a list to choose from.
edt,All filename specific Command Component Macros now will support both long and short versions of the filename.  To specify a short (8.3) filename, use an uppercase macro, such as %B.  To specify the long form of the filename, use a lowercase macro, such as %b.
edt,Hawk's Symbols feature searches through your project files and any files you have added to the symbols database for a match.  If your symbols database becomes large, you may experience sluggish behavior.  Right-click on the Symbols tab to get the pop-up dialog, then select Compact Symbol DB.  This will defragment the symbols database.
edt,When you right-click on the Symbols tab, or on an item in the Outline tab of the Project Window, you receive a pop-up dialog.  This dialog can be used to perform maintenance on the symbols database.
edt,Would you like to bind a keystroke to conveniently take you to one of the displays on the Project Window, such as Open, Bookmark or Outline?  Go to Tools|Customize|Keyboard and bind the keystroke to the function FldrSetCurrent().  The value you pass to the function is a number corresponding to the tab number, 0=Project tab, 1=Outline tab, 2=Bookmark tab, 3=Open tab and 4=CodeFolio tab.
edt,Hawk offers CodeSense, a feature that provides Word Completion and function parameter help to C and C++ users.  It works by parsing provided programming libraries, as well as project source files.  
edt,Do you have the need to activate file locking?  Under Tools|Customize|Libraries, check the box for File Locking.  This causes Hawk to load the CWLOCK.DLL.  CWLOCK.DLL provides semaphore file locking for Hawk.  It latches into several event handlers to avoid multiple users from editing the same file.  Each user must also be using Hawk and have CWLOCK.DLL loaded.  For more information, see the CW_FAQ.HLP file topic on File Locking.
edt,Under Tools|Customize|Language|Edit are two checkboxes: Align <begin-block> and Align <end-block>.  These allow Hawk to emulate, and improve on, MSVC++'s "Smart Indent" feature.  If "Align <begin-block>" or "Align <end-block>" are enabled, when you type an open brace or closing brace key that goes with a statement (if, for, etc.), then the brace is placed according to the current alignment style.
edt,The Search dialog and the Project| Properties| Errors| Custom Error Parsers dialog now offer the Regex Assistant.  You can access this by selecting the right-arrow in the dialog.  This pop-up dialog lists common regular expressions which you can highlight and append to your string.  More information on regular expressions and how to use them can be found in the online help.
edt,Marks are not just numbers anymore.  You can now assign a name to the mark.  You can review both local and global bookmarks in the Bookmark Window tab on the Project Window.  A pop-up dialog is available by right-clicking in the margin area that allows you to quickly set a mark.  Bookmark Options are defined on their own tab in the Tools|Customize|Environment dialog.  Here you can set retention of marks, prompt for names, even view/edit the database.
edt,Hawk uses its Edit Search Path when finding files to load.  If you specify a filename to load without specifying a path, Hawk first looks for that file in the current directory, then looks at the directories on the Edit Search Path.  You will find the Edit Search Path in the Project| Properties| Directories dialog.  It is a semicolon-separated list of directories you can edit directly, or Browse and let Hawk automatically add it.
edt,Decorative formatting is a feature available as an extension of the Word Wrap function.  A pop-up menu is available by right-clicking on the Wrap indicator on the status bar.  Decorative formatting is in effect when you define a left margin greater than 1.  When the text wraps to the next line, it copies any pattern outside the margins to the new line.  This feature is document specific.
edt,Compiler defines can now be setup directly from the Text| Selective Display dialog by selecting the Preprocessor Directives radio button.  Just enter your defines directly into the dialog box, separated by a semi-colon.  Hawk takes care of writing this information into the cwright.ini file.
edt,The Selective Display dialog lets you control which lines of the document are visible, based on the content of those lines, allowing you to quickly locate what you want to edit.  Press [Esc] to restore the invisible lines.  Multi-level nested code folding is offered, paragraph support, selected text, and much more.  See Text| Selective Display to set this up.
edt,The Visibles feature gives you a visible representation of otherwise invisible whitespace characters, such as tabs, spaces, etc.  This is setup on the Tools| Customize| View Setups| Visibles tab.  Under Tools| Customize| View Setups| Colors you can also define a color combination in addition to the visible character assignment that displays the visibles faintly, avoiding a messy appearance.
edt,The Hawk FAQ file, CW_FAQ.HLP, consists of "How To" tips.  Many technical tips are offered, as well as many of our text files and TechNotes.  This file is installed with Hawk and has its own icon.  You can also access it from Hawk's Help|Frequently Asked Questions menu.
edt,When you specify a tool on Project| Properties| Tools such as compile, build, etc., you can now invoke a Hawk function instead of an external program.  To do this, just use '#' as the first character of the command.  This provides an opportunity for you to customize Hawk, such as writing an interface to a debugger or compiler.
edt,If you find that your extension settings are not sticking, first make sure they are all in the [Extension] section of the cwright.ini file, not in the [Editor].  The only lines that should be in [Editor] starting with Ext...  are: ExtCommentSearchLimit=200, ExtDelayedColoring=1 and ExtSetUpdateDelay=0.  Everything extension specific should be in [Extension] or one of [Extension.EXT].
edt,Are you a Borland Delphi user?  Hawk offers features especially for you.  Delphi Synchronization can be enabled through Tools| Customize| Libraries.  This activates synchronization between Delphi and Hawk.  Also, if you are interested in creating Hawk add-on DLL's, we offer a sample program to help you.  The file is called dprsamp.zip and can be found by clicking on the Hawk Support Files icon, or downloaded from any of our sites.
edt,If you use hex view extensively, you may want to jump to a specific location and then offset x number of bytes.  To have the cursor move beyond current line, assign 'MovNextChar 2' to a key, this will wrap to the next line and move a full byte (x times 2 to offset a number of bytes).  The same will work for 'MovPrevChar 2'.
edt,Do you use hex view extensively and have the need to move to a certain offset in the file?  You can bind a button or keystroke to the function MovToOffset to conveniently do this.  An example of moving to a hex offset would be: MovToOffset(0x4000).
edt,When determining where to place temporary files, Hawk looks at the CWTMP, TMP, and TEMP environment variables.  If these variables don't exist, Hawk uses the current working directory (not the directory Hawk's EXE file resides in).  Other environment variables available can be found in the Getting Started Manual.
edt,Hawk does not require that you create any new environment variables, however, environment variables add to the flexibility of your configuration.  Currently supported environment variables are: TEMP, TMP, CWTMP, CWINI, CWLIB, CWPST, CWMENU, CWBTN, CWLDB and CWEXT.  More information on environment variables can be found in the Getting Started Manual.
edt,Do you ever wonder if you have any files for which you have not saved your changes?  If you have a lot of open files, it may be cumbersome to determine which ones have been modified.  Try binding a button or keystroke to: 'DlgBufferSave 0'.  This brings up the Save Modified Documents dialog.
edt,Are you using PVCS command line version control with Hawk and having problems with Hawk using the vcs.cfg file?  Either you could place vcs.cfg in your current directory, set an environment variable that points to it, or add the -c to the command line.  An example: get -cC:\\PVCS\\VCS.CFG -l (no space before path).
edt,Hawk has special file loading and validation options available under Tools| Customize| Environment| General.  You can choose whether to pre-load local and non-local files, and whether Hawk validates local and non-local files.  Preloading loads all files into virtual memory, not relying on pointers to the actual file on disk.  Validating is the process by where Hawk periodically checks to see if the file has been altered by another process.
edt,Hawk offers component macros to simplify many operations.  These are listed under Filename Macros and Symbolic Macros in the online help.  These can be used on command lines, in templates, and formatting printing, to name a few.
edt,Any time you need to insert a date in Hawk, you can use the %d component macro to do so.  Examples include, a header when printing, or in a function template inserted in your source file.  The format Hawk uses for the date it inserts comes from the WIN.INI file.  If you wish to change the format, edit your WIN.INI, changing the sShortDate in the [Int'l] section.
edt,Would you like to convert some of your old Hawk extension dll's, or write one using C++ instead of C?  We do offer an example, called CPPSAMP.ZIP.  This sample demonstrates how to call an MFC C++ DLL from Hawk.  It can be found by clicking on the Hawk Support Files icon, or downloaded from any of our sites.
edt,Hawk will make backups of your files for you, provided you have this enabled under Tools| Customize| Language| Options| Make Backups.  Your backup spec is defined under Tools| Customize| Environment| Backup.  There are several combinations of macros that can be used here.  For example, if you wanted all backups saved in a certain location, you could use d:\\backup\\%r%e.  The default is %b.bak which will place the backup in the same directory as the file that is currently being edited.
edt,If you prefer to view your File Difference in interleaved mode, rather than side-by-side, and would like the convenience of the Next and Previous buttons, try this.  Bind a keystroke or button to (all on one line) Next difference:\n'SrchFind ^.*\n\c[+-] SEARCH_REGEX|SEARCH_FORWARD'\n\nand Previous difference:\n'SrchFind ^.*\n\c[+-] SEARCH_REGEX'
edt,Have you ever been performing large search operations, or similar, and Hawk seems to hang?  This could be a problem with running out of the internal memory swap blocks currently allocated by Hawk for these type of functions.  Try adding a line to the [Editor] section of the cwright.ini file that says SysSwapBlocks(100).  This value should generally be enough for most operations.
edt,Would you like to bind a keystroke to conveniently take you to one of the displays on the Output Window?  You can do this using the function OutputSetActiveID.  Each tab has an id of 1 greater than the one to the left.  Some examples are 'OutputSetActiveId=0 0 1' to select the Build tab, and 'OutputSetActiveId=2 0 1' to select the Search tab.
edt,Would you like to control the way Hawk cursors through tabs?  Using the CUA keymap, you can bind a keystroke or button to a function to have the cursor move through tabs one space at a time (CUA_enable_virtual=TRUE) or to jump through the tabs (CUA_enable_virtual=FALSE).  These would go on separate buttons or key bindings. Hawk's CUA keymap also has an 'Allow Cursor in Virtual Space' option that can be toggled to achieve the same purpose in the Tools|Customize|Environment|Keymap|Keymap Options dialog.
edt,Hawk can be launched from the command line with several different command line parameters.  These are discussed in the  User's Guide chapter on 'Configuration Files and Command Line Parameters'.  There are flags to launch multiple copies of Hawk, launch with a specific filename, with a certain configuration file, or without a state file.  Another common desire is to have Hawk launch with a specific project.  Just put the path and project name as the filename to launch with.
edt,Hawk maintains response histories for many prompts.  These are listed under Tools| Customize| Environment| History.  You may determine how many history entries you wish Hawk to retain for each prompt.  Previous history entries can also be removed from this dialog.
edt,Hawk can provide basic FTP "Put" and "Get" functionality.  FTP functions can be enabled in the Tools|Customize|Libraries dialog and used under the File pull-down menu.
edt,Hawk has an option to do a modeless search and replace over the current file.  Choosing "Modeless Dialog" in the "Default Search and Replace Settings" dialog allows the Search/Replace prompt to standby while you edit the text or adjust the view.  The search can then be picked up where it was left off.
