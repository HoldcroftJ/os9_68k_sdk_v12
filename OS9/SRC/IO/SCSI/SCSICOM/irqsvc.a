 nam irqsvc
 ttl glue code for interrupt service routine (SCSI low-level) in C

* Copyright 1993 by Microware Systems Corporation
* Reproduced Under License

* This source code is the proprietary confidential property of
* Microware Systems Corporation, and is provided to licensee
* solely for documentation and educational purposes. Reproduction,
* publication, or distribution in any form to any party other than
* the licensee is strictly prohibited.


********************
* Edition History:
*
* ed.    date.     reason.											who.
* --  --------  -------------------------------------------------  	---
* 01  93/07/02  converted for UCC (taken from syscalls.a).			ats
*               ---- OS-9/68K V3.0 released ----
*               ---- OS-9/68K V3.1 released ----

* NOTE: this routine is included (by "use" statements) at driver
*       compile time.


********************
*
* irqsvc - service device interrupt(s)
*
* Kernel Conventions:
*
*    Passed:  (a2) = static storage ptr
*             (a3) = port address
*             (a6) = system global data ptr
*
*    Returns:  (cc) = carry clear (interrupt serviced)
*
*    Error Return:  (cc) = carry set (interrupt NOT serviced)
*
*    NOTE:  The following registers may be destroyed by the
*           IRQ service routine:  d0, d1, a0, a2, a3, a6.
*           Any other registers used MUST be preserved.
*
* C Driver Conventions:
*
*    Call:  irq (local_stat, port_addr)
*
*    Returns:  0 if interrupt serviced.
*
* call irq (local_stat, port_addr)
*
irqsvc: move.l a5,-(sp) save a5
 move.l a2,d0 copy low-level static storage ptr
 move.l a3,d1 copy port address
 suba.l a5,a5 set top of stack (traceback)
 bsr irq call irq service
 move.l d0,d1 was interrupt serviced ?
 beq.s irq_done ..yes; return carry clear
 ori.b #Carry,ccr flag interrupt NOT serviced
irq_done movea.l (sp)+,a5 restore a5 (keep ccr status)
 rts return

